/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Classroom.Employee;
import Classroom.IEmployee;
import Classroom.Student;
import Classroom.TimeSheet;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhara
 */
public class Payroll_App extends javax.swing.JPanel {
    ArrayList<IEmployee> employees;

    /**
     * Creates new form Payroll_App
     */
    
    public Payroll_App(ArrayList<IEmployee> employees) {
        this.employees=employees;
        initComponents();
        loadListingTable1();
        Date today = Calendar.getInstance().getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        jTextField1.setText(sdf.format(today));
    }
    
    private void loadListingTable1() {
        // TODO: Add the columns for other attributes
        Date today = Calendar.getInstance().getTime();
        int EmpPaid=0;
        double totalPay=0;
        System.out.println("reaching load listing");
        System.out.println(employees.size());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable2.getModel();
        defaultTableModel.setRowCount(0);
        for(IEmployee employee: employees)
        {
            System.out.println(defaultTableModel.getRowCount());
            Employee emp =(Employee) employee;
            
            for(TimeSheet t : emp.getTimesheet()){
                Object[] row = new Object[8];
                row[0] = sdf.format(t.getEndtime());
                row[1] = emp.getFirstName()+" "+emp.getLastName();
                row[2]= emp.getEmpID();
                row[3]= emp.getCategory();
                row[4] = emp.getSalary();
                row[5] = t.getHours();
                row[6] = emp.getBonus();
                row[7] = emp.claculateGrossSalary(t);
                defaultTableModel.addRow(row);
                totalPay=totalPay+emp.claculateGrossSalary(t);
                
            }
            if(!emp.getTimesheet().isEmpty()){
                EmpPaid=EmpPaid+1;
            }
            System.out.print("check");
            
        }
        
        jTextField2.setText(Integer.toString((int) totalPay));
        jTextField3.setText(Integer.toString(EmpPaid));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Date");

        jLabel2.setText("Payroll Total");

        jTextField2.setEditable(false);

        jLabel3.setText("Employee Total");

        jTextField3.setEditable(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Name", "Employee ID", "Category", "Salary", "Hours", "Bonus", "Gross Pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Output Payroll");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jButton1)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int EmpPaid=0;
        double totalPay=0;
        System.out.println("reaching load listing");
        System.out.println(employees.size());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        FileWriter writer=null;
        try {
            writer = new FileWriter("C:\\Users\\dhara\\Desktop\\output_payroll.csv");
            for(IEmployee employee: employees)
            {
                Employee emp =(Employee) employee;

                for(TimeSheet t : emp.getTimesheet()){
                    writer.append(sdf.format(t.getEndtime()));
                    writer.append(",");
                    writer.append(emp.getFirstName()+" "+emp.getLastName());
                    writer.append(",");
                    writer.append(Integer.toString(emp.getEmpID()));
                    writer.append(",");
                    writer.append(emp.getCategory().toString());
                    writer.append(",");
                    writer.append(Integer.toString((int) emp.getSalary()));
                    writer.append(",");
                    writer.append(Integer.toString((int) t.getHours()));
                    writer.append(",");
                    writer.append(Integer.toString((int) emp.getBonus()));
                    writer.append(",");
                    writer.append(Integer.toString((int) emp.claculateGrossSalary(t)));
                    writer.append("\n");

                }

            }
            
        } catch (IOException ex) {
            Logger.getLogger(Payroll_App.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                writer.flush();
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(Payroll_App.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
